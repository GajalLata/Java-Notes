<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    tools:context=".eleven">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_margin="5dp"
        tools:ignore="SpeakableTextPresentCheck">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:background="#F6FAF9"
            android:orientation="vertical">


            <TextView
                android:id="@+id/textView79"
                style="bold"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="#C5AFAD"
                android:padding="10dp"
                android:text="Strings in Java"
                android:textColor="#B71C1C"
                android:textSize="44sp" />

            <TextView
                android:id="@+id/textView80"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"
                android:layout_marginTop="10dp"

                android:layout_marginRight="10dp"
                android:background="#ffffff"
                android:padding="10dp"
                android:text="A string is a sequence of characters.\nStrings are objects that represent a char array. \nFor example "
                android:textColor="#000000"
                android:textSize="24sp" />

            <TextView
                android:id="@+id/textView81"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"

                android:layout_marginTop="10dp"
                android:layout_marginRight="10dp"
                android:layout_marginBottom="10dp"
                android:background="#5C8A9F"
                android:padding="10dp"
                android:text="char[] str = {'A','R','R','A','Y'}; \nString s = new String(str);"
                android:textColor="#000000"
                android:textSize="22sp" />

            <TextView
                android:id="@+id/textView73"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"
                android:layout_marginTop="10dp"

                android:layout_marginRight="10dp"
                android:background="#ffffff"
                android:padding="10dp"
                android:text="is same as:"
                android:textColor="#000000"
                android:textSize="24sp" />

            <TextView
                android:id="@+id/textView74"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"

                android:layout_marginTop="10dp"
                android:layout_marginRight="10dp"
                android:layout_marginBottom="10dp"
                android:background="#5C8A9F"
                android:padding="10dp"
                android:text='String s = "ARRAY";'
                android:textColor="#000000"
                android:textSize="22sp" />

            <TextView
                android:id="@+id/textView2"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"
                android:layout_marginTop="10dp"

                android:layout_marginRight="10dp"
                android:background="#ffffff"
                android:padding="10dp"
                android:text="Strings are immutable and cannot be changed. java.lang.String class is used to create a String object. The string is a class but can be used as a data type. :"
                android:textColor="#000000"
                android:textSize="24sp" />

            <TextView
                android:id="@+id/textView56"
                style="bold"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="#C5AFAD"
                android:padding="10dp"
                android:text="Syntax "
                android:textColor="#B71C1C"
                android:textSize="44sp" />

            <TextView
                android:id="@+id/textView82"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"

                android:layout_marginTop="10dp"
                android:layout_marginRight="10dp"
                android:layout_marginBottom="10dp"
                android:background="#5C8A9F"
                android:padding="10dp"
                android:text="String String_name = &quot;Sequence of Characters&quot; ;"
                android:textColor="#000000"
                android:textSize="22sp" />

            <TextView
                android:id="@+id/textView83"
                style="bold"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="#C5AFAD"
                android:padding="10dp"
                android:text="Strings Methods:"
                android:textColor="#B71C1C"
                android:textSize="44sp" />

            <TextView
                android:id="@+id/textView84"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"
                android:layout_marginTop="10dp"

                android:layout_marginRight="10dp"
                android:background="#ffffff"
                android:padding="10dp"
                android:text="1.length()->	Returns the length of String name. (5 in this case)
                \n\n2.toLowerCase()->	Converts all the characters of the string to the lower case letters.
                \n\n3.toUpperCase()->	Converts all the characters of the string to the upper case letters.
                \n\n4.trim()->	Returns a new String after removing all the leading and trailing spaces from the original string.
                \n\n5.substring(int start)->	 Returns a substring from start to the end. Substring(3) returns “ry”. [Note that indexing starts from 0]
                \n\n6.substring(int start, int end)->	Returns a substring from the start index to the end index. The start index is included, and the end is excluded.
                \n\n7.replace(‘r’, ‘p’)->	Returns a new string after replacing r with p. Happy is returned in this case. (This method takes char as argument)
                \n\n8.startsWith(“Ha”)->	Returns true if the name starts with the string “Ha”. (True in this case)
                \n\n9.endsWith(“ry”)->	Returns true if the name ends with the string “ry”. (True in this case)
                \n\n10.charAt(2)->	Returns the character at a given index position. (r in this case)
                \n\n11.indexOf(“s”)->	Returns the index of the first occurrence of the specified character in the given string.
                \n\n12.lastIndexOf(“r”)->	Returns the last index of the specified character from the given string. (3 in this case)
                \n\n13.equals(“Harry”)->	Returns true if the given string is equal to “Harry” false otherwise [Case sensitive]
                \n\n14.equalsIgnoreCase(“harry”)->	Returns true if two strings are equal, ignoring the case of characters."
                android:textColor="#000000"
                android:textSize="24sp" />

            <TextView
                android:id="@+id/textView85"
                style="bold"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="#C5AFAD"
                android:padding="10dp"
                android:text="Source Code:"
                android:textColor="#B71C1C"
                android:textSize="44sp" />

            <TextView
                android:id="@+id/textView86"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"

                android:layout_marginTop="10dp"
                android:layout_marginRight="10dp"
                android:layout_marginBottom="10dp"
                android:background="#5C8A9F"
                android:padding="10dp"
                android:text="public class String_methods
                 \n{
                 \npublic static void main(String[] args) {
                 \nString name = &quot;Harry&quot;;
                 \nSystem.out.println(name);
                 \nint value = name.length();
                 \nSystem.out.println(value);
                 \nString lstring = name.toLowerCase();
                 \nSystem.out.println(lstring);
                 \nString ustring = name.toUpperCase();
                 \nSystem.out.println(ustring);
                 \nString nonTrimmedString = &quot;     Harry     &quot;;
                 \nSystem.out.println(nonTrimmedString);
                 \nString trimmedString = nonTrimmedString.trim();
                 \nSystem.out.println(trimmedString);
                 \nSystem.out.println(name.substring(1));
                 \nSystem.out.println(name.substring(1,5));
                 \nSystem.out.println(name.replace('r', 'p'));
                 \nSystem.out.println(name.replace(&quot;r&quot;, &quot;ier&quot;));
                 \nSystem.out.println(name.startsWith(&quot;Har&quot;));
                 \nSystem.out.println(name.endsWith(&quot;dd&quot;));
                 \nSystem.out.println(name.charAt(4));
                 \nString modifiedName = &quot;Harryrryrry&quot;;
                 \nSystem.out.println(modifiedName.indexOf(&quot;rry&quot;));
                 \nSystem.out.println(modifiedName.indexOf(&quot;rry&quot;, 4));
                 \nSystem.out.println(modifiedName.lastIndexOf(&quot;rry&quot;, 7));
                 \nSystem.out.println(name.equals(&quot;Harry&quot;));
                 \nSystem.out.println(name.equalsIgnoreCase(&quot;HarRY&quot;));
                  \nSystem.out.println(&quot;I am escape sequence\tdouble quote&quot;);
                  \n}
                  \n}"
                android:textColor="#000000"
                android:textSize="22sp" />

            <TextView
                android:id="@+id/textView87"
                style="bold"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_margin="10dp"
                android:background="#C5AFAD"
                android:padding="10dp"
                android:text="Output:"
                android:textColor="#B71C1C"
                android:textSize="44sp" />

            <TextView
                android:id="@+id/textView88"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="10dp"
                android:layout_marginTop="10dp"
                android:layout_marginRight="10dp"
                android:layout_marginBottom="5dp"
                android:background="#101010"
                android:padding="10dp"
                android:text="
\nHarry
\n5
\nharry
\nHARRY
\n     Harry
\nHarry
\narry
\narry
\nHappy
\nHaieriery
\ntrue
\nfalse
\ny
\n2
\n5
\n5
\ntrue
\ntrue
"

                android:textColor="#FAF6F6"
                android:textSize="30sp"
                android:textStyle="bold" />


        </LinearLayout>
    </ScrollView>
</LinearLayout>